==2668== Memcheck, a memory error detector
==2668== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2668== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2668== Command: ./sim_main tests/example1.img 43 -s
==2668== 
Split RegFile enabled
Loading memory image file: tests/example1.img
Resetting core...
Running simulation for 43 cycles
Simulation on cycle 0. The state is:
PC = 0x0
Register file:
	R0 = 0x0	R1 = 0x0	R2 = 0x0	R3 = 0x0	R4 = 0x0	R5 = 0x0	R6 = 0x0	R7 = 0x0	R8 = 0x0	R9 = 0x0	R10 = 0x0	R11 = 0x0	R12 = 0x0	R13 = 0x0	R14 = 0x0	R15 = 0x0	R16 = 0x0	R17 = 0x0	R18 = 0x0	R19 = 0x0	R20 = 0x0	R21 = 0x0	R22 = 0x0	R23 = 0x0	R24 = 0x0	R25 = 0x0	R26 = 0x0	R27 = 0x0	R28 = 0x0	R29 = 0x0	R30 = 0x0	R31 = 0x0
Command at each pipe stage:
	IF : ADD $3 , $0(=0x0) , 4(=0x0)
	ID : NOP $0 , $0(=0x0) , $0(=0x0)
	EXE : NOP $0 , $0(=0x0) , $0(=0x0)
	MEM : NOP $0 , $0(=0x0) , $0(=0x0)
	WB : NOP $0 , $0(=0x0) , $0(=0x0)


Simulation on cycle 1. The state is:
PC = 0x4
Register file:
	R0 = 0x0	R1 = 0x0	R2 = 0x0	R3 = 0x0	R4 = 0x0	R5 = 0x0	R6 = 0x0	R7 = 0x0	R8 = 0x0	R9 = 0x0	R10 = 0x0	R11 = 0x0	R12 = 0x0	R13 = 0x0	R14 = 0x0	R15 = 0x0	R16 = 0x0	R17 = 0x0	R18 = 0x0	R19 = 0x0	R20 = 0x0	R21 = 0x0	R22 = 0x0	R23 = 0x0	R24 = 0x0	R25 = 0x0	R26 = 0x0	R27 = 0x0	R28 = 0x0	R29 = 0x0	R30 = 0x0	R31 = 0x0
Command at each pipe stage:
	IF : ADD $4 , $0(=0x0) , 4(=0x0)
	ID : ADD $3 , $0(=0x0) , 4(=0x4)
	EXE : NOP $0 , $0(=0x0) , $0(=0x0)
	MEM : NOP $0 , $0(=0x0) , $0(=0x0)
	WB : NOP $0 , $0(=0x0) , $0(=0x0)


Simulation on cycle 2. The state is:
PC = 0x8
Register file:
	R0 = 0x0	R1 = 0x0	R2 = 0x0	R3 = 0x0	R4 = 0x0	R5 = 0x0	R6 = 0x0	R7 = 0x0	R8 = 0x0	R9 = 0x0	R10 = 0x0	R11 = 0x0	R12 = 0x0	R13 = 0x0	R14 = 0x0	R15 = 0x0	R16 = 0x0	R17 = 0x0	R18 = 0x0	R19 = 0x0	R20 = 0x0	R21 = 0x0	R22 = 0x0	R23 = 0x0	R24 = 0x0	R25 = 0x0	R26 = 0x0	R27 = 0x0	R28 = 0x0	R29 = 0x0	R30 = 0x0	R31 = 0x0
Command at each pipe stage:
	IF : SUB $7 , $0(=0x0) , 1(=0x0)
	ID : ADD $4 , $0(=0x0) , 4(=0x4)
	EXE : ADD $3 , $0(=0x0) , 4(=0x4)
	MEM : NOP $0 , $0(=0x0) , $0(=0x0)
	WB : NOP $0 , $0(=0x0) , $0(=0x0)


Simulation on cycle 3. The state is:
PC = 0xC
Register file:
	R0 = 0x0	R1 = 0x0	R2 = 0x0	R3 = 0x0	R4 = 0x0	R5 = 0x0	R6 = 0x0	R7 = 0x0	R8 = 0x0	R9 = 0x0	R10 = 0x0	R11 = 0x0	R12 = 0x0	R13 = 0x0	R14 = 0x0	R15 = 0x0	R16 = 0x0	R17 = 0x0	R18 = 0x0	R19 = 0x0	R20 = 0x0	R21 = 0x0	R22 = 0x0	R23 = 0x0	R24 = 0x0	R25 = 0x0	R26 = 0x0	R27 = 0x0	R28 = 0x0	R29 = 0x0	R30 = 0x0	R31 = 0x0
Command at each pipe stage:
	IF : SUB $8 , $0(=0x0) , 1(=0x0)
	ID : SUB $7 , $0(=0x0) , 1(=0x1)
	EXE : ADD $4 , $0(=0x0) , 4(=0x4)
	MEM : ADD $3 , $0(=0x0) , 4(=0x4)
	WB : NOP $0 , $0(=0x0) , $0(=0x0)


Simulation on cycle 4. The state is:
PC = 0x10
Register file:
	R0 = 0x0	R1 = 0x0	R2 = 0x0	R3 = 0x4	R4 = 0x0	R5 = 0x0	R6 = 0x0	R7 = 0x0	R8 = 0x0	R9 = 0x0	R10 = 0x0	R11 = 0x0	R12 = 0x0	R13 = 0x0	R14 = 0x0	R15 = 0x0	R16 = 0x0	R17 = 0x0	R18 = 0x0	R19 = 0x0	R20 = 0x0	R21 = 0x0	R22 = 0x0	R23 = 0x0	R24 = 0x0	R25 = 0x0	R26 = 0x0	R27 = 0x0	R28 = 0x0	R29 = 0x0	R30 = 0x0	R31 = 0x0
Command at each pipe stage:
	IF : HALT $0 , $0(=0x0) , $0(=0x0)
	ID : SUB $8 , $0(=0x0) , 1(=0x1)
	EXE : SUB $7 , $0(=0x0) , 1(=0x1)
	MEM : ADD $4 , $0(=0x0) , 4(=0x4)
	WB : ADD $3 , $0(=0x0) , 4(=0x4)


Simulation on cycle 5. The state is:
PC = 0x14
Register file:
	R0 = 0x0	R1 = 0x0	R2 = 0x0	R3 = 0x4	R4 = 0x4	R5 = 0x0	R6 = 0x0	R7 = 0x0	R8 = 0x0	R9 = 0x0	R10 = 0x0	R11 = 0x0	R12 = 0x0	R13 = 0x0	R14 = 0x0	R15 = 0x0	R16 = 0x0	R17 = 0x0	R18 = 0x0	R19 = 0x0	R20 = 0x0	R21 = 0x0	R22 = 0x0	R23 = 0x0	R24 = 0x0	R25 = 0x0	R26 = 0x0	R27 = 0x0	R28 = 0x0	R29 = 0x0	R30 = 0x0	R31 = 0x0
Command at each pipe stage:
	IF : NOP $0 , $0(=0x0) , $0(=0x0)
	ID : HALT $0 , $0(=0x0) , $0(=0x0)
	EXE : SUB $8 , $0(=0x0) , 1(=0x1)
	MEM : SUB $7 , $0(=0x0) , 1(=0x1)
	WB : ADD $4 , $0(=0x0) , 4(=0x4)


Simulation on cycle 6. The state is:
PC = 0x18
Register file:
	R0 = 0x0	R1 = 0x0	R2 = 0x0	R3 = 0x4	R4 = 0x4	R5 = 0x0	R6 = 0x0	R7 = 0xFFFFFFFF	R8 = 0x0	R9 = 0x0	R10 = 0x0	R11 = 0x0	R12 = 0x0	R13 = 0x0	R14 = 0x0	R15 = 0x0	R16 = 0x0	R17 = 0x0	R18 = 0x0	R19 = 0x0	R20 = 0x0	R21 = 0x0	R22 = 0x0	R23 = 0x0	R24 = 0x0	R25 = 0x0	R26 = 0x0	R27 = 0x0	R28 = 0x0	R29 = 0x0	R30 = 0x0	R31 = 0x0
Command at each pipe stage:
	IF : NOP $0 , $0(=0x0) , $0(=0x0)
	ID : NOP $0 , $0(=0x0) , $0(=0x0)
	EXE : HALT $0 , $0(=0x0) , $0(=0x0)
	MEM : SUB $8 , $0(=0x0) , 1(=0x1)
	WB : SUB $7 , $0(=0x0) , 1(=0x1)


Simulation on cycle 7. The state is:
PC = 0x1C
Register file:
	R0 = 0x0	R1 = 0x0	R2 = 0x0	R3 = 0x4	R4 = 0x4	R5 = 0x0	R6 = 0x0	R7 = 0xFFFFFFFF	R8 = 0xFFFFFFFF	R9 = 0x0	R10 = 0x0	R11 = 0x0	R12 = 0x0	R13 = 0x0	R14 = 0x0	R15 = 0x0	R16 = 0x0	R17 = 0x0	R18 = 0x0	R19 = 0x0	R20 = 0x0	R21 = 0x0	R22 = 0x0	R23 = 0x0	R24 = 0x0	R25 = 0x0	R26 = 0x0	R27 = 0x0	R28 = 0x0	R29 = 0x0	R30 = 0x0	R31 = 0x0
Command at each pipe stage:
	IF : NOP $0 , $0(=0x0) , $0(=0x0)
	ID : NOP $0 , $0(=0x0) , $0(=0x0)
	EXE : NOP $0 , $0(=0x0) , $0(=0x0)
	MEM : HALT $0 , $0(=0x0) , $0(=0x0)
	WB : SUB $8 , $0(=0x0) , 1(=0x1)


Simulation on cycle 8. The state is:
PC = 0x20
Register file:
	R0 = 0x0	R1 = 0x0	R2 = 0x0	R3 = 0x4	R4 = 0x4	R5 = 0x0	R6 = 0x0	R7 = 0xFFFFFFFF	R8 = 0xFFFFFFFF	R9 = 0x0	R10 = 0x0	R11 = 0x0	R12 = 0x0	R13 = 0x0	R14 = 0x0	R15 = 0x0	R16 = 0x0	R17 = 0x0	R18 = 0x0	R19 = 0x0	R20 = 0x0	R21 = 0x0	R22 = 0x0	R23 = 0x0	R24 = 0x0	R25 = 0x0	R26 = 0x0	R27 = 0x0	R28 = 0x0	R29 = 0x0	R30 = 0x0	R31 = 0x0
Command at each pipe stage:
	IF : NOP $0 , $0(=0x0) , $0(=0x0)
	ID : NOP $0 , $0(=0x0) , $0(=0x0)
	EXE : NOP $0 , $0(=0x0) , $0(=0x0)
	MEM : NOP $0 , $0(=0x0) , $0(=0x0)
	WB : HALT $0 , $0(=0x0) , $0(=0x0)
Program successfully ran for 8 cycles
==2668== 
==2668== HEAP SUMMARY:
==2668==     in use at exit: 0 bytes in 0 blocks
==2668==   total heap usage: 3 allocs, 3 frees, 8,744 bytes allocated
==2668== 
==2668== All heap blocks were freed -- no leaks are possible
==2668== 
==2668== For counts of detected and suppressed errors, rerun with: -v
==2668== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
